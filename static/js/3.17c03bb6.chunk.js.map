{"version":3,"file":"static/js/3.17c03bb6.chunk.js","mappings":"mQACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA6K,0BAA7K,EAAiN,yB,SCmBjN,EAXmB,SAAC,GAAiC,IAAhCA,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KACjBC,EAAO,YAAcF,EAC3B,OACE,0BACE,SAAC,KAAD,CAASG,UAAWC,EAAUC,GAAIH,EAAlC,SACGD,KAIR,ECPD,EAJgB,SAAC,GAA6B,IAA5BK,EAA2B,EAA3BA,QAChB,OAAO,gBAAKH,UAAWC,EAAhB,SAA4BE,GACpC,ECMKC,GAAcC,EAAAA,EAAAA,GAAiB,IAoB/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,EAlBL,SAAC,GAAyB,IAAxBE,EAAuB,EAAvBA,aACpB,OACE,kBAAMC,SAAUD,EAAhB,WACE,0BACE,SAACE,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXf,KAAK,iBACLgB,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUZ,QAGzB,0BACE,gDAIP,IA6BD,EAzBgB,SAAC,GAAwD,IAAvDa,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,gBAK7BC,EAAkBH,EAAQI,KAAI,SAACC,GAAD,OAClC,SAAC,EAAD,CAAuBxB,KAAMwB,EAAExB,KAAMD,GAAIyB,EAAEzB,IAA1ByB,EAAEzB,GADe,IAG9B0B,EAAmBL,EAASG,KAAI,SAACG,GAAD,OACpC,SAAC,EAAD,CAAoBrB,QAASqB,EAAErB,SAAjBqB,EAAE3B,GADoB,IAItC,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAiCmB,KACjC,iBAAKpB,UAAWC,EAAhB,WACE,yBAAMsB,KACN,0BACE,SAACjB,EAAD,CAAkBI,SAjBJ,SAACe,GACrBN,EAAgBM,EAAOC,eACxB,WAoBF,ECjCD,GALyBC,EAAAA,EAAAA,KAEvBC,EAAAA,EAAAA,KAjBsB,SAACC,GACvB,MAAO,CACLZ,QAASY,EAAMC,YAAYb,QAC3BC,SAAUW,EAAMC,YAAYZ,SAE/B,IAE0B,SAACa,GAC1B,MAAO,CACLZ,gBAAiB,SAACO,GAChBK,GAASC,EAAAA,EAAAA,GAAaN,GACvB,EAEJ,IAEwBC,CAGvBM,E,sGCxBF,G,QAA8B,mCAA9B,EAAwE,4B,4BCElEC,EACJ,SAACA,GAAD,OACA,YAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,GAAgB,YAC1BC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,iBAAKxC,UAAWC,EAAgB,KAAOqC,EAAWrC,EAAU,IAA5D,WACE,0BACE,SAAC,GAAD,kBAAakC,GAAWE,OAE1B,yBAAMC,IAAY,gCAAQF,EAAKI,MAAb,WAGvB,CAXD,EAaW3B,EAAWqB,EAAQ,YACnBO,EAAQP,EAAQ,Q,8EClBtB,IAAMlB,EAAW,SAAC0B,GACvB,IAAIA,EACJ,MAAO,mBACR,EAEYrC,EAAmB,SAACsC,GAC/B,OAAO,SAACD,GACN,GAAIA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EACvD,CACF,C","sources":["webpack://react-way-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","webpack://react-way-samurai/./src/components/common/FormsControl/FormsControl.module.css?07ef","components/common/FormsControl/FormsControl.tsx","utils/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__i8qpr\",\"dialogsItems\":\"Dialogs_dialogsItems__YAf1z\",\"dialog\":\"Dialogs_dialog__rqFSk\",\"active\":\"Dialogs_active__OGCvf\",\"messages\":\"Dialogs_messages__dCkbt\",\"message\":\"Dialogs_message__QkN-1\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\ninterface DialogItemProps {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nconst DialogItem = ({id, name}: DialogItemProps) => {\r\n  const path = '/dialogs/' + id\r\n  return (\r\n    <div>\r\n      <NavLink className={s.dialog} to={path}>\r\n        {name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\ninterface MessageProps {\r\n  message: string | undefined\r\n}\r\n\r\nconst Message = ({message}: MessageProps) => {\r\n  return <div className={s.message}>{message}</div>\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {IDialog, IMessage} from '../../models'\r\nimport {maxLengthCreator, required} from '../../utils/validators'\r\nimport {Textarea} from '../common/FormsControl/FormsControl'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\n\r\ninterface DialogsProps {\r\n  dialogs: IDialog[]\r\n  messages: IMessage[]\r\n  onCreateMessage: (newMessageText: string) => void\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = ({handleSubmit}: any) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name='newMessageText'\r\n          placeholder='Enter your message'\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'DialogsNewMessageText'})(DialogsForm)\r\n\r\nconst Dialogs = ({dialogs, messages, onCreateMessage}: DialogsProps) => {\r\n  const createMessage = (values: any) => {\r\n    onCreateMessage(values.newMessageText)\r\n  }\r\n\r\n  const dialogsElements = dialogs.map((d) => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ))\r\n  const messagesElements = messages.map((m) => (\r\n    <Message key={m.id} message={m.message} />\r\n  ))\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <DialogsReduxForm onSubmit={createMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\n// import {withAuthReducer} from '../../hoc/withAuthRedirect'\r\nimport {IState} from '../../models'\r\nimport {addMessageAC} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onCreateMessage: (newMessageText: string) => {\r\n      dispatch(addMessageAC(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n  // withAuthReducer\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__1qHzT\",\"error\":\"FormsControl_error__Rkvhi\",\"formSummaryError\":\"FormsControl_formSummaryError__S3afn\"};","import React from 'react'\r\nimport s from './FormsControl.module.css'\r\n\r\nconst Element =\r\n  (Element: any) =>\r\n  ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n          <Element {...input} {...props} />\r\n        </div>\r\n        <div>{hasError && <span> {meta.error} </span>}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport const Textarea = Element('textarea')\r\nexport const Input = Element('input')\r\n","export const required = (value: string) => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n  return (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength}`\r\n  }\r\n}\r\n"],"names":["id","name","path","className","s","to","message","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","dialogs","messages","onCreateMessage","dialogsElements","map","d","messagesElements","m","values","newMessageText","compose","connect","state","dialogsPage","dispatch","addMessageAC","Dialogs","Element","input","meta","props","hasError","touched","error","Input","value","maxLength","length"],"sourceRoot":""}