{"version":3,"file":"static/js/44.c0ef58a3.chunk.js","mappings":"wPACA,EAAmC,gC,SCoD7BA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAtCL,SAAC,GAA2C,IAA1CE,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,MAChC,OACE,kBAAMC,SAAUF,EAAhB,WACE,0BACE,SAACG,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,GACXC,KAAK,OACLC,YAAY,QACZC,KAAK,aAGT,0BACE,SAACP,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,GACXC,KAAK,OACLC,YAAY,WACZC,KAAK,gBAGT,4BACE,SAACP,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,GACXC,KAAK,WACLE,KAAK,eACJ,IANL,iBASCT,IAAS,gBAAKU,UAAWC,EAAhB,SAAqCX,KAC/C,0BACE,0CAIP,IA+BKY,EAA2B,CAC/BC,MAAAA,EAAAA,IAGF,GAAeC,EAAAA,EAAAA,KAVS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,OAEtB,GAMuCJ,EAAxC,EA1Bc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAKd,OAL6C,EAAxBG,QAMZ,SAAC,KAAD,CAAUE,GAAG,cAGpB,4BACE,mCACA,SAACtB,EAAD,CAAgBK,SAVH,SAACkB,GAChBN,EAAMM,EAAKC,MAAOD,EAAKE,SAAUF,EAAKG,WACvC,MAWF,G,sGCzED,G,QAA8B,mCAA9B,EAAwE,4B,4BCElEC,EACJ,SAACA,GAAD,OACA,YAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,GAAgB,YAC1BC,EAAWF,EAAKG,SAAWH,EAAKzB,MACtC,OACE,iBAAKU,UAAWC,EAAgB,KAAOgB,EAAWhB,EAAU,IAA5D,WACE,0BACE,SAAC,GAAD,kBAAaa,GAAWE,OAE1B,yBAAMC,IAAY,gCAAQF,EAAKzB,MAAb,WAGvB,CAXD,EAaW6B,EAAWN,EAAQ,YACnBnB,EAAQmB,EAAQ,Q,8EClBtB,IAAMjB,EAAW,SAACwB,GACvB,IAAIA,EACJ,MAAO,mBACR,EAEYC,EAAmB,SAACC,GAC/B,OAAO,SAACF,GACN,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EACvD,CACF,C","sources":["webpack://react-way-samurai/./src/components/Login/Login.module.css?3530","components/Login/Login.tsx","webpack://react-way-samurai/./src/components/common/FormsControl/FormsControl.module.css?07ef","components/common/FormsControl/FormsControl.tsx","utils/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formSummaryError\":\"Login_formSummaryError__syurK\"};","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {IState} from '../../models'\r\nimport {login} from '../../redux/authReducer'\r\nimport {required} from '../../utils/validators'\r\nimport {Input} from '../common/FormsControl/FormsControl'\r\nimport s from './Login.module.css'\r\n\r\ninterface LoginFormProps {\r\n  handleSubmit: any\r\n  error: string\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error}: LoginFormProps) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          validate={[required]}\r\n          type='text'\r\n          placeholder='Email'\r\n          name='email'\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          validate={[required]}\r\n          type='text'\r\n          placeholder='Password'\r\n          name='password'\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          validate={[required]}\r\n          type='checkbox'\r\n          name='rememberMe'\r\n        />{' '}\r\n        remember me\r\n      </div>\r\n      {error && <div className={s.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\ninterface LoginProps {\r\n  login: (email: string, password: string, rememberMe: boolean) => void\r\n  isAuth: boolean\r\n}\r\n\r\nconst Login = ({login, isAuth}: LoginProps) => {\r\n  const onSubmit = (data: any) => {\r\n    login(data.email, data.password, data.rememberMe)\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Navigate to='/profile' />\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nconst mapObjectDispatchToProps = {\r\n  login\r\n}\r\n\r\nexport default connect(mapStateToProps, mapObjectDispatchToProps)(Login)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__1qHzT\",\"error\":\"FormsControl_error__Rkvhi\",\"formSummaryError\":\"FormsControl_formSummaryError__S3afn\"};","import React from 'react'\r\nimport s from './FormsControl.module.css'\r\n\r\nconst Element =\r\n  (Element: any) =>\r\n  ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n          <Element {...input} {...props} />\r\n        </div>\r\n        <div>{hasError && <span> {meta.error} </span>}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport const Textarea = Element('textarea')\r\nexport const Input = Element('input')\r\n","export const required = (value: string) => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n  return (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength}`\r\n  }\r\n}\r\n"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","Input","validate","required","type","placeholder","name","className","s","mapObjectDispatchToProps","login","connect","state","isAuth","auth","to","data","email","password","rememberMe","Element","input","meta","props","hasError","touched","Textarea","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}